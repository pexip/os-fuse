Author: Aurelien Jarno <aurel32@debian.org>
Description: GNU/kFreeBSD support

diff -Naurp fuse.orig/include/fuse_common.h fuse/include/fuse_common.h
--- fuse.orig/include/fuse_common.h	2011-05-26 08:16:03.507551482 +0200
+++ fuse/include/fuse_common.h	2011-05-26 08:36:34.753656902 +0200
@@ -261,7 +261,7 @@ void fuse_remove_signal_handlers(struct
  * ----------------------------------------------------------- */
 
 #if FUSE_USE_VERSION < 26
-#    ifdef __FreeBSD__
+#    if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 #	 if FUSE_USE_VERSION < 25
 #	     error On FreeBSD API version 25 or greater must be used
 #	 endif
diff -Naurp fuse.orig/include/fuse_compat.h fuse/include/fuse_compat.h
--- fuse.orig/include/fuse_compat.h	2011-05-26 08:16:03.507551482 +0200
+++ fuse/include/fuse_compat.h	2011-05-26 08:36:34.753656902 +0200
@@ -65,7 +65,7 @@ struct fuse *fuse_setup_compat25(int arg
 
 void fuse_teardown_compat22(struct fuse *fuse, int fd, char *mountpoint);
 
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
 #include <sys/statfs.h>
 
 struct fuse_operations_compat22 {
diff -Naurp fuse.orig/include/fuse_lowlevel_compat.h fuse/include/fuse_lowlevel_compat.h
--- fuse.orig/include/fuse_lowlevel_compat.h	2011-05-26 08:16:03.511551501 +0200
+++ fuse/include/fuse_lowlevel_compat.h	2011-05-26 08:36:34.753656902 +0200
@@ -72,7 +72,7 @@ size_t fuse_dirent_size(size_t namelen);
 char *fuse_add_dirent(char *buf, const char *name, const struct stat *stbuf,
 		      off_t off);
 
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
 
 #include <sys/statfs.h>
 
diff -Naurp fuse.orig/lib/fuse.c fuse/lib/fuse.c
--- fuse.orig/lib/fuse.c	2011-05-26 08:16:03.515551523 +0200
+++ fuse/lib/fuse.c	2011-05-26 08:36:34.757656925 +0200
@@ -954,7 +954,7 @@ static inline void fuse_prepare_interrup
 		fuse_do_prepare_interrupt(req, d);
 }
 
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
 
 static int fuse_compat_open(struct fuse_fs *fs, const char *path,
 			    struct fuse_file_info *fi)
@@ -3721,7 +3721,7 @@ struct fuse *fuse_new_common(struct fuse
 	if (!f->conf.ac_attr_timeout_set)
 		f->conf.ac_attr_timeout = f->conf.attr_timeout;
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 	/*
 	 * In FreeBSD, we always use these settings as inode numbers
 	 * are needed to make getcwd(3) work.
@@ -3897,7 +3897,7 @@ void fuse_register_module(struct fuse_mo
 	fuse_modules = mod;
 }
 
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
 
 static struct fuse *fuse_new_common_compat(int fd, const char *opts,
 					   const struct fuse_operations *op,
diff -Naurp fuse.orig/lib/fuse_lowlevel.c fuse/lib/fuse_lowlevel.c
--- fuse.orig/lib/fuse_lowlevel.c	2011-05-26 08:16:03.519551550 +0200
+++ fuse/lib/fuse_lowlevel.c	2011-05-26 08:36:34.761656939 +0200
@@ -1734,7 +1734,7 @@ int fuse_req_getgroups(fuse_req_t req, i
 }
 #endif
 
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
 
 static void fill_open_compat(struct fuse_open_out *arg,
 			     const struct fuse_file_info_compat *f)
diff -Naurp fuse.orig/lib/fuse_session.c fuse/lib/fuse_session.c
--- fuse.orig/lib/fuse_session.c	2011-05-26 08:16:03.519551550 +0200
+++ fuse/lib/fuse_session.c	2011-05-26 08:36:34.761656939 +0200
@@ -200,6 +200,6 @@ void fuse_chan_destroy(struct fuse_chan
 	free(ch);
 }
 
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
 FUSE_SYMVER(".symver fuse_chan_new_compat24,fuse_chan_new@FUSE_2.4");
 #endif
diff -Naurp fuse.orig/lib/helper.c fuse/lib/helper.c
--- fuse.orig/lib/helper.c	2011-05-26 08:16:03.519551550 +0200
+++ fuse/lib/helper.c	2011-05-26 08:36:34.761656939 +0200
@@ -357,7 +357,7 @@ int fuse_version(void)
 
 #include "fuse_compat.h"
 
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
 
 struct fuse *fuse_setup_compat22(int argc, char *argv[],
 				 const struct fuse_operations_compat22 *op,
